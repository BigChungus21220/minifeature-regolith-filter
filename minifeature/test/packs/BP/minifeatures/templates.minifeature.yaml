{
  namespace: lichen_ground_cover,

  bushy_lichen: {
    inherits: <lichen_plant>,
    $places_block$: fb:bushy_lichen
  },

  delicate_lichen: {
    inherits: <lichen_plant>,
    $places_block$: fb:delicate_lichen
  },

  funnel_lichen: {
    inherits: <lichen_plant>,
    $places_block$: fb:funnel_lichen
  },

  leafy_lichen: {
    inherits: <lichen_plant>,
    $places_block$: fb:leafy_lichen
  },

  podetia: {
    inherits: <lichen_plant>,
    $places_block$: fb:podetia,
    $scatter_chance$: 25
  },

  regal_lichen: {
    inherits: <lichen_plant>,
    $places_block$: fb:regal_lichen
  },

  <lichen_plant>: {
    type: rule,
    $scatter_chance$: 25,
    places: {
      type: vegetation_patch,
      places: {
        type: block,
        places_block: $places_block$,
        enforce_placement_rules: true,
        enforce_survivability_rules: true,
        may_attach_to: {
          bottom: [
            minecraft:end_stone,
            fb:fruiting_lichen_block,
            fb:lichen_block
          ]
        }
      },
      horizontal_radius: 4,
      vertical_range: 2,
      depth: 0,
      ground_block: minecraft:end_stone,
      replaceable_blocks: [
        minecraft:air
      ],
      vegetation_chance: 0.1
    },
    conditions: {
      placement_pass: final_pass,
      minecraft:biome_filter: {
        test: "has_biome_tag",
        operator: "==",
        value: "the_end"
      }
    },
    distribution: {
      iterations: "(v.originx*v.originx + v.originz*v.originz > 500*500) && (q.noise(v.originx/2048, v.originz/2048) > math.sin((0.5 - 0.3)*180))",
      scatter_chance: $scatter_chance$,
      x: {
        distribution: uniform,
        extent: [0, 15]
      },
      y: "q.above_top_solid()",
      z: {
        distribution: uniform,
        extent: [0, 15]
      }
    }
  }
}